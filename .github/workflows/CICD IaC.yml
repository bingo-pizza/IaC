name: 'Terraform IaC'

on:
    push

jobs:
  terraform_CI:
    name: 'Terraform_CI'
    runs-on: ubuntu-latest
    environment: dev

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2.0.3
    
    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Format
      id: fmt
      run: terraform fmt

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Init -reconfigure
      run: |
        cd ${{ github.workspace }}/stacks/bingopizza
        terraform init 
    # Generates an execution plan for Terraform
    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color

      # On push to "main", build or change infrastructure according to Terraform configuration files
      # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks

    - name: Terraform Plan
      run: |
        cd ${{ github.workspace }}/stacks/bingopizza
        terraform plan -var-file=../env/dev/dev.tfvars -out=plano.tfplan
      
    - name: Upload artifact for deployment jobs
      uses: actions/upload-artifact@v2
      with:
        name: plano
        path: ${{ github.workspace }}/stacks/bingopizza    
        
  terraform_CD:
    name: 'Terraform_CD'
    runs-on: ubuntu-latest
    needs: terraform_CI
    environment: dev

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    - name: Download artifact from build job
      uses: actions/download-artifact@v2
      with:
        name: plano
        path: ${{ github.workspace }}/stacks/bingopizza
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2.0.3
      
    #Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Init
      run: |
        ls -lha ${{ github.workspace }}/stacks/bingopizza
        cd ${{ github.workspace }}/stacks/bingopizza
        terraform init -reconfigure
        
    - name: Terraform apply
      run: |
        cd ${{ github.workspace }}/stacks/bingopizza
        terraform apply "plano.tfplan" 
